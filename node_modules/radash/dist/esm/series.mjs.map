{"version":3,"file":"series.mjs","sources":["../../src/series.ts"],"sourcesContent":["/**\n * Creates a series object around a list of values\n * that should be treated with order.\n */\nexport const series = <T extends string | symbol>(...items: T[]) => {\n  const { itemsByValue, itemsByIndex } = items.reduce(\n    (acc, item, idx) => ({\n      itemsByValue: {\n        ...acc.itemsByValue,\n        [item]: idx\n      },\n      itemsByIndex: {\n        ...acc.itemsByIndex,\n        [idx]: item\n      }\n    }),\n    {\n      itemsByValue: {} as Record<T, number>,\n      itemsByIndex: {} as Record<number, T>\n    }\n  )\n  return {\n    /**\n     * Given two values in the series, returns the\n     * value that occurs later in the series\n     */\n    min: (a: T, b: T): T => {\n      return itemsByValue[a] < itemsByValue[b] ? a : b\n    },\n    /**\n     * Given two values in the series, returns the\n     * value that occurs earlier in the series\n     */\n    max: (a: T, b: T): T => {\n      return itemsByValue[a] > itemsByValue[b] ? a : b\n    },\n    /**\n     * Returns the first item from the series\n     */\n    first: () => {\n      return itemsByIndex[0]\n    },\n    /**\n     * Returns the last item in the series\n     */\n    last: () => {\n      return itemsByIndex[items.length - 1]\n    },\n    /**\n     * Given an item in the series returns the next item\n     * in the series or default if the given value is\n     * the last item in the series\n     */\n    next: <TDefault extends null | T>(\n      current: T,\n      defaultValue?: TDefault\n    ): T | TDefault => {\n      return itemsByIndex[itemsByValue[current] + 1] ?? defaultValue\n    },\n    /**\n     * Given an item in the series returns the previous item\n     * in the series or default if the given value is\n     * the first item in the series\n     */\n    previous: <TDefault extends null | T>(\n      current: T,\n      defaultValue?: TDefault\n    ): T | TDefault => {\n      return itemsByIndex[itemsByValue[current] - 1] ?? defaultValue\n    }\n  }\n}\n"],"names":[],"mappings":"AAIa,MAAA,MAAA,GAAS,IAA+B,KAAe,KAAA;AAClE,EAAA,MAAM,EAAE,YAAA,EAAc,YAAa,EAAA,GAAI,KAAM,CAAA,MAAA;AAAA,IAC3C,CAAC,GAAK,EAAA,IAAA,EAAM,GAAS,MAAA;AAAA,MACnB,YAAc,EAAA;AAAA,QACZ,GAAG,GAAI,CAAA,YAAA;AAAA,QACP,CAAC,IAAO,GAAA,GAAA;AAAA,OACV;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,GAAG,GAAI,CAAA,YAAA;AAAA,QACP,CAAC,GAAM,GAAA,IAAA;AAAA,OACT;AAAA,KACF,CAAA;AAAA,IACA;AAAA,MACE,cAAc,EAAC;AAAA,MACf,cAAc,EAAC;AAAA,KACjB;AAAA,GACF,CAAA;AACA,EAAO,OAAA;AAAA,IAKL,GAAA,EAAK,CAAC,CAAA,EAAM,CAAY,KAAA;AACtB,MAAA,OAAO,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,GAAK,CAAI,GAAA,CAAA,CAAA;AAAA,KACjD;AAAA,IAKA,GAAA,EAAK,CAAC,CAAA,EAAM,CAAY,KAAA;AACtB,MAAA,OAAO,YAAa,CAAA,CAAA,CAAA,GAAK,YAAa,CAAA,CAAA,CAAA,GAAK,CAAI,GAAA,CAAA,CAAA;AAAA,KACjD;AAAA,IAIA,OAAO,MAAM;AACX,MAAA,OAAO,YAAa,CAAA,CAAA,CAAA,CAAA;AAAA,KACtB;AAAA,IAIA,MAAM,MAAM;AACV,MAAO,OAAA,YAAA,CAAa,MAAM,MAAS,GAAA,CAAA,CAAA,CAAA;AAAA,KACrC;AAAA,IAMA,IAAA,EAAM,CACJ,OAAA,EACA,YACiB,KAAA;AACjB,MAAO,OAAA,YAAA,CAAa,YAAa,CAAA,OAAA,CAAA,GAAW,CAAM,CAAA,IAAA,YAAA,CAAA;AAAA,KACpD;AAAA,IAMA,QAAA,EAAU,CACR,OAAA,EACA,YACiB,KAAA;AACjB,MAAO,OAAA,YAAA,CAAa,YAAa,CAAA,OAAA,CAAA,GAAW,CAAM,CAAA,IAAA,YAAA,CAAA;AAAA,KACpD;AAAA,GACF,CAAA;AACF;;;;"}