'use strict';

const series = (...items) => {
  const { itemsByValue, itemsByIndex } = items.reduce(
    (acc, item, idx) => ({
      itemsByValue: {
        ...acc.itemsByValue,
        [item]: idx
      },
      itemsByIndex: {
        ...acc.itemsByIndex,
        [idx]: item
      }
    }),
    {
      itemsByValue: {},
      itemsByIndex: {}
    }
  );
  return {
    min: (a, b) => {
      return itemsByValue[a] < itemsByValue[b] ? a : b;
    },
    max: (a, b) => {
      return itemsByValue[a] > itemsByValue[b] ? a : b;
    },
    first: () => {
      return itemsByIndex[0];
    },
    last: () => {
      return itemsByIndex[items.length - 1];
    },
    next: (current, defaultValue) => {
      return itemsByIndex[itemsByValue[current] + 1] ?? defaultValue;
    },
    previous: (current, defaultValue) => {
      return itemsByIndex[itemsByValue[current] - 1] ?? defaultValue;
    }
  };
};

exports.series = series;
//# sourceMappingURL=series.cjs.map
